---
import MenuItem from "./MenuItem.astro";
let { menuItems } = Astro.props;
console.log(menuItems);
---

<script>
	function setPositionClass(items, position, className) {
		if (!(items instanceof HTMLCollection)) {
			throw new Error("Not an instanceof HTMLCollection");
		}
		if (position > items.length - 1) {
			return items;
		}

		if (position < 0) {
			return items;
		}
		items[position].className = className;
		return items;
	}

	function calcPosition(event, position) {
		if (!(event instanceof KeyboardEvent)) {
			return null;
		}

		// Counterintuitive because elements are listed in reverse
		if (event.key == "s") {
			return position + 1;
		}

		if (event.key == "w") {
			if (position == 0) return position;
			return position - 1;
		}
		return position;
	}
	let position = 0;

	window.addEventListener("load", (event) => {
		console.log("loaded");
		let menuItemsId = "menu-items";

		let menuItems = document.getElementById(menuItemsId);

		if (!(menuItems instanceof HTMLElement)) {
			console.error(`Could not find ${menuItemsId}`);
		}

		// Init the position to the top.
		if (menuItems.children.length > 0) {
			setPositionClass(menuItems.children, 0, "active");
		}
	});

	document.addEventListener("keypress", (event) => {
		let menuItemsId = "menu-items";
		let pItemsContainer = "content-box";

		let menuItems = document.getElementById(menuItemsId);
		let pItems = document.getElementById(pItemsContainer);
		let menuChildren = menuItems.children;
		let pChildren = pItems.children;
		console.log(
			`Current Position ${position} ${menuItems.children[position]}`,
		);

		setPositionClass(menuChildren, position, "");
		setPositionClass(pChildren, position, "");
		position = calcPosition(event, position);
		position =
			position > menuItems.children.length - 1
				? menuItems.children.length - 1
				: Math.max(0, position);
		setPositionClass(pChildren, position, "active");
		setPositionClass(menuChildren, position, "active");
		// activeChild(pChildren, position);
	});
</script>

<div id="menu-container">
	<nav>
		<ul id="menu-items">
			{
				menuItems.map((item) => (
					<MenuItem brief={item.brief} subject={item.subject} />
				))
			}
		</ul>
	</nav>
	<div id="content-box">
		{menuItems.map((item) => <p class="inner-content">{item.brief}</p>)}
	</div>
</div>

<style>
	#menu-container {
		font-family: "Press Start 2P";
		background-color: black;
		color: white;
		display: grid;
		grid-template-columns: 15% 75%;
	}

	ul {
		margin: auto auto;
	}

	#content-box .active {
		color: white;
		z-index: 0;
	}

	#content-box p {
		background-color: black;
		color: black;
		position: absolute;
		text-align: center;
		top: 0;
		left: 0;
		z-index: -1;
	}
	#content-box {
		border: 2px solid white;
		position: relative;
	}
</style>
