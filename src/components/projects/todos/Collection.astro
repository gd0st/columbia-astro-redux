---
import Todo from "./Todo.astro";
let { todos = [] } = Astro.props;
console.log(todos);
---

<script>

	class Todo extends HTMLDivElement {
		name;
		status;
		constructor(name, done) {
			super();
			this.className = "todo"
			let input = document.createElement("input");
			input.type = "checkbox";
			let label = document.createElement("label");
			label.textContent = name
			this.appendChild(input)
		}
	}

	customElements.define("col-todo", Todo, { extends: "div"})

	class TodoList extends HTMLUListElement {
		constructor() {
			super();
		}

		/**
		 * 
		 * @param {Todo} todo 
		 */
		newTodo(todo) {
			let li = document.createElement("li")
			 li.appendChild(todo)
			this.appendChild(li)
		}
	}

	customElements.define("todo-list", TodoList, {extends: "ul"})


	/**
	 * Constructs the Todo object
	 * @param {string} subject
	 * @param {boolean} done
	 */
	function makeTodo(subject, done) {
		let todo = {
			subject: subject,
			done: done,
		};

		let div = document.createElement("div");
		div.className = "todo";
		let input = document.createElement("input");
		input.type = "checkbox";
		let label = document.createElement("label");
		label.textContent = subject;
		div.appendChild(input);
		div.appendChild(label);
		return div;
	}
	let todoForm = document.getElementById("todo-form");

	if (todoForm instanceof HTMLFormElement) {
		todoForm.addEventListener("submit", function (this, event) {
			event.preventDefault();
			let subject = document.getElementById("todo-subject");
			if (!(subject instanceof HTMLInputElement)) {
				throw new Error("todo-subject is not input field.");
			}

			let list = document.getElementById("todo-list");

			if (!(list instanceof TodoList)) {
				throw new Error("list is not a TodoList")
			}
			let todo = new Todo(subject, false)
			console.log(list)
			list.newTodo(todo)

			// let li = document.createElement("li");
			// li.appendChild(makeTodo(subject.value, false));
			// let ul = document.getElementById("todo-list");
			// ul.appendChild(li);
			// synchronize list with server...
		});
	}
</script>

<div id="todo-container" />

	<todo-list id="todo-list" > 
	<!-- <ul id="todo-list">
		<li>
			{todos.map((item) => <Todo name={item.name} />)}
		</li>
	</ul> -->

	<form action="" id="todo-form">
		<fieldset id="new-todo">
			<input id="todo-subject" type="text" placeholder="New Todo" />
			<button type="submit">Add</button>
		</fieldset>
	</form>
</div>

<style>
	#todo-container {
		display: grid;
		background-color: var(--primary);
		color: var(--text);
		--primary: #6f4d3c;
		--secondary: #c2a764;
		--text: #eddce5;
	}
	fieldset {
		border: none;
		padding: 0;
	}
	ul {
		list-style: none;
		padding-left: 0;
	}

	#new-todo > input,
	#new-todo > button {
		border: none;
		background-color: transparent;
	}

	#new-todo {
		border: 
		background-color: var(--secondary);
	}
</style>
