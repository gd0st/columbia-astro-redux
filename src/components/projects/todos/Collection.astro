---
import Todo from "./Todo.astro";
let { todos = [{ subject: "New Todo" }] } = Astro.props;
---

<script>
	/**
	 * Constructs the Todo object
	 * @param {string} subject
	 * @param {boolean} done
	 */
	function makeTodo(subject, done) {
		let todo = {
			subject: subject,
			done: done,
		};

		let listItem = document.createElement("li");
		let checkbox = document.createElement("input");
		checkbox.type = "checkbox";

		let checkboxLabel = document.createElement("label");
		checkboxLabel.textContent = subject;

		listItem.appendChild(checkbox);
		listItem.appendChild(checkboxLabel);
		listItem.className = "todo";
		return listItem;
	}

	function makeTodoList(title, todos) {
		let parentUi = document.createElement("div");
		let listItems = document.createElement("ul");
		todos.array.forEach((element) => {
			let todo = makeTodo(element.subject, element.done);
			listItems.appendChild(todo);
		});
		parentUi.appendChild(listItems);
		parentUi.className = "todo-list";
		return parentUi;
	}

	function appendTodo(list, todo) {
		if (!(list instanceof HTMLUListElement)) {
			throw new Error("list child is not ul");
		}
		let task = makeTodo(todo.subject, todo.done);
		list.appendChild(task);

		return list;
	}
	let todoForm = document.getElementById("todo-form");

	if (todoForm instanceof HTMLFormElement) {
		todoForm.addEventListener("submit", function (this, event) {
			event.preventDefault();
			let subject = document.getElementById("todo-subject");
			if (!(subject instanceof HTMLInputElement)) {
				throw new Error("todo-subject is not input field.");
			}

			let todo = { subject: subject.value, done: false };
			let list = document.getElementById("todo-list");
			appendTodo(list, todo);
		});
	}
</script>

<script is:inline>
	async function handleComplete(item) {
		if (!(item instanceof HTMLInputElement)) {
			throw new Error("Check is not an input");
		}

		let labels = item.labels;

		if (labels.length != 1) {
			throw new Error("No task item");
		}

		let label = labels[0];

		let task = {
			subject: label.textContent.trim(),
			done: item.checked,
		};
		let url = "http://localhost:5432/update/task";

		let body = JSON.stringify(task);

		let res = await fetch(url, {
			method: "POST",
			body: body,
			headers: {
				"Content-type": "application/json",
			},
		});

		if (res.ok) {
			label.className = task.done ? "crossed" : "";
		} else {
			console.error(res.statusText, res.status);
		}

		// Sender OK
	}
</script>

<div id="todo-container">
	<ul id="todo-list">
		{
			todos.map((item) => (
				<>
					<label>
						<input
							class="task-completion"
							type="checkbox"
							checked={item.done}
							onchange="handleComplete(this)"
						/>
						{item.subject}
					</label>
				</>
			))
		}
	</ul>
	<form action="" id="todo-form">
		<fieldset id="todo-input">
			<input id="todo-subject" type="text" placeholder="New Todo" />
			<button type="submit">Add</button>
		</fieldset>
	</form>
</div>

<style>
	#todo-container {
		display: grid;
		border: 2px solid black;
	}

	.crossed {
		text-decoration: line-through;
	}
	ul {
		list-style: none;
		padding-left: 0;
	}

	fieldset {
		border: none;
	}
</style>
